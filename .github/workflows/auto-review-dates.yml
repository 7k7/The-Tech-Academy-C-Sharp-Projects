name: Auto-Generate Review Countdown & Email Notification

on:
  schedule:
    - cron: "0 0 * * *"  # Runs daily at midnight
  workflow_dispatch:  # Allows manual triggering

jobs:
  check-review-dates:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up GitHub CLI
        run: |
          sudo apt update && sudo apt install gh -y

      - name: Check Issues and Send Email Notifications
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          REPO="7k7/The-Tech-Academy-C-Sharp-Projects"
          today=$(date +%Y-%m-%d)
          
          # Get all issues
          issues=$(gh issue list --repo $REPO --limit 100 --json number,title,labels --jq '.[] | {number: .number, title: .title, labels: [.labels[].name]}')
          
          for row in $(echo "$issues" | jq -c '.'); do
            issue_number=$(echo "$row" | jq -r '.number')
            title=$(echo "$row" | jq -r '.title')
            labels=$(echo "$row" | jq -r '.labels[]' 2>/dev/null || echo "")
            
            # Determine review countdown based on label
            if echo "$labels" | grep -q "🔥 High Priority"; then
              due_date=$(date -d "$today +1 day" +%Y-%m-%d)
            elif echo "$labels" | grep -q "⏳ Medium Priority"; then
              due_date=$(date -d "$today +2 days" +%Y-%m-%d)
            elif echo "$labels" | grep -q "✅ Low Priority"; then
              due_date=$(date -d "$today +3 days" +%Y-%m-%d)
            elif echo "$labels" | grep -q "🟢 Mastered"; then
              due_date=$(date -d "$today +10 days" +%Y-%m-%d)
            else
              continue  # Skip if no matching label
            fi
            
            # Add a comment with the next review date
            gh issue comment "$issue_number" --repo "$REPO" --body "🚀 **Next Review Due Date:** $due_date"
            
            # Export variables for email notification
            echo "TITLE=$title" >> $GITHUB_ENV
            echo "DUE_DATE=$due_date" >> $GITHUB_ENV
          done

      - name: Send Email Notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_SERVER }}
          server_port: ${{ secrets.SMTP_PORT }}
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: "GitHub Review Reminder - ${{ env.TITLE }}"
          to: "7.kmontano.7@gmail.com"
          from: "GitHub Actions <7.kmontano.7@gmail.com>"
          body: "🚀 Your next review for '${{ env.TITLE }}' is due on ${{ env.DUE_DATE }}. Check your GitHub issues for details!"
